#!/usr/bin/env python3
# -*- coding: UTF-8 -*-
#
# generated by wxGlade 1.1.0pre on Fri Oct 28 20:55:56 2022
#

import wx

# begin wxGlade: dependencies
import gettext
# end wxGlade

# begin wxGlade: extracode

def _(s):
	return s
# end wxGlade


class MainFrame(wx.Frame):
	def __init__(self, *args, **kwds):
		# begin wxGlade: MainFrame.__init__
		kwds["style"] = kwds.get("style", 0) | wx.DEFAULT_FRAME_STYLE | wx.FULL_REPAINT_ON_RESIZE | wx.STAY_ON_TOP
		wx.Frame.__init__(self, *args, **kwds)
		self.SetSize((1000, 800))
		self.SetMinSize((400, 300))
		self.SetTitle(_("TesseracOCR"))

		self.pagelistPanel = DialogPanel(parent=self)
		# Menu Bar
		self.frame_menubar = wx.MenuBar()
		wxglade_tmp_menu = wx.Menu()
		item = wxglade_tmp_menu.Append(wx.ID_ANY, _("Close"), _("Closes the application"))
		self.Bind(wx.EVT_MENU, self.onMenuClose, item)
		self.frame_menubar.Append(wxglade_tmp_menu, _("File"))
		wxglade_tmp_menu = wx.Menu()
		item = wxglade_tmp_menu.Append(wx.ID_ANY, _("Recognized text"), "", wx.ITEM_RADIO)
		self.Bind(wx.EVT_MENU, self.onMenuViewRecognized, item)
		item = wxglade_tmp_menu.Append(wx.ID_ANY, _("List of pages"), "", wx.ITEM_RADIO)
		self.Bind(wx.EVT_MENU, self.onMenuViewPagelist, item)
		self.frame_menubar.Append(wxglade_tmp_menu, _("View"))
		self.SetMenuBar(self.frame_menubar)
		# Menu Bar end

		self.frame_statusbar = self.CreateStatusBar(1)
		self.frame_statusbar.SetStatusWidths([-1])
		# statusbar fields
		frame_statusbar_fields = [_("frame_statusbar")]
		for i in range(len(frame_statusbar_fields)):
			self.frame_statusbar.SetStatusText(frame_statusbar_fields[i], i)

		self.panel = wx.Panel(self, wx.ID_ANY)

		sizer = wx.StaticBoxSizer(wx.StaticBox(self.panel, wx.ID_ANY, ""), wx.VERTICAL)

		self.text_ctrl = wx.TextCtrl(self.panel, wx.ID_ANY, "", style=wx.TE_MULTILINE | wx.TE_READONLY | wx.TE_RICH)
		sizer.Add(self.text_ctrl, 0, wx.EXPAND | wx.SHAPED, 0)

		self.panel.SetSizer(sizer)

		self.Layout()

		# end wxGlade
		self.text_ctrl.SetSize(self.Size-(10,80))
		self.panel.Bind(wx.EVT_SIZE, self.onWindowSize)

	def onWindowSize(self, event):
		self.text_ctrl.SetSize(self.Size-(10,80))

	def onMenuViewPagelist(self, event):  # wxGlade: MainFrame.<event_handler>
		self.pagelistPanel.Show()
		x, y = self.Size-self.pagelistPanel.Size-(5,25)
		self.pagelistPanel.MoveXY(x, y)
		self.pagelistPanel.SetFocus()

	def onMenuViewRecognized(self, event):  # wxGlade: MainFrame.<event_handler>
		self.text_ctrl.SetFocus()
		self.pagelistPanel.Hide()
		event.Skip()
	def onMenuClose(self, event):  # wxGlade: MainFrame.<event_handler>
		self.Close()
# end of class MainFrame

class DialogPanel(wx.Panel):
	def __init__(self, *args, **kwds):
		# begin wxGlade: DialogPanel.__init__
		kwds["style"] = kwds.get("style", 0) | wx.TAB_TRAVERSAL
		wx.Panel.__init__(self, *args, **kwds)
		self.Hide()

		sizer = wx.BoxSizer(wx.VERTICAL)

		label = wx.StaticText(self, wx.ID_ANY, _("Document Pages"))
		sizer.Add(label, 0, 0, 0)

		self.list_ctrl = wx.ListCtrl(self, wx.ID_ANY, style=wx.LC_HRULES | wx.LC_REPORT | wx.LC_VRULES)
		self.list_ctrl.AppendColumn(_("A"), format=wx.LIST_FORMAT_LEFT, width=-1)
		self.list_ctrl.AppendColumn(_("B"), format=wx.LIST_FORMAT_LEFT, width=-1)
		self.list_ctrl.AppendColumn(_("C"), format=wx.LIST_FORMAT_LEFT, width=-1)
		sizer.Add(self.list_ctrl, 1, wx.EXPAND, 0)

		self.SetSizer(sizer)
		sizer.Fit(self)

		self.Layout()
		# end wxGlade

# end of class DialogPanel

class App(wx.App):
	def OnInit(self):
		self.frame = MainFrame(None, wx.ID_ANY, "")
		self.SetTopWindow(self.frame)
		self.frame.Show()
		return True

# end of class App

if __name__ == "__main__":
	gettext.install("app") # replace with the appropriate catalog name

	app = App(0)
	app.MainLoop()
